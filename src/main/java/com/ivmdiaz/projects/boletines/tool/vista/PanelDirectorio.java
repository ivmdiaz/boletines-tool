/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.ivmdiaz.projects.boletines.tool.vista;

import com.ivmdiaz.projects.boletines.tool.Principal;
import com.ivmdiaz.projects.boletines.tool.modelo.Directorio;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author idiaz@cx.local
 */
public class PanelDirectorio extends javax.swing.JPanel {

    private File archivoDirectorio;
    private List<Directorio> directorioList = new ArrayList<>();

    /**
     * Creates new form Directorio
     */
    public PanelDirectorio() {
        initComponents();
        this.actualizarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDirectorio = new javax.swing.JTable();
        btnCargarArchivo = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1200, 600));

        title.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        title.setText("DIRECTORIO CORREOS");

        tableDirectorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "Niup", "Correo personal", "Correo alternativo", "Tel√©fono"
            }
        ));
        jScrollPane1.setViewportView(tableDirectorio);

        btnCargarArchivo.setText("Cargar archivo");
        btnCargarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarArchivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(title)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCargarArchivo)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1160, Short.MAX_VALUE))
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(title)
                .addGap(47, 47, 47)
                .addComponent(btnCargarArchivo)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCargarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarArchivoActionPerformed
        final JFileChooser fileChooser = new JFileChooser();
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("*.pdf", new String[]{"pdf"}));
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        final int result = fileChooser.showOpenDialog(this);
        if (result == 0) {
            try {
                final File selectedFile = fileChooser.getSelectedFile();
                System.out.println("Selected file: " + selectedFile.getAbsolutePath());
                this.archivoDirectorio = selectedFile;
                this.procesarArchivoExcel();
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Error no se pudo cargar el archivo", "Error", 0);
            }
        }
    }//GEN-LAST:event_btnCargarArchivoActionPerformed

    public void procesarArchivoExcel() throws FileNotFoundException, IOException {

        FileInputStream excelFile = new FileInputStream(this.archivoDirectorio);

        final Workbook workbook = new XSSFWorkbook(excelFile);
        Sheet datatypeSheet = workbook.getSheetAt(0);
        Iterator<Row> iterator = datatypeSheet.iterator();

        DataFormatter formatter = new DataFormatter();

        while (iterator.hasNext()) {

            Row currentRow = iterator.next();

            Cell cellNiup = currentRow.getCell(0);
            Cell cellCorreoPersonal = currentRow.getCell(2);
            Cell cellCorreoAlternativo = currentRow.getCell(3);

            if (cellNiup == null) {
                break;
            }

            if (formatter.formatCellValue(cellCorreoPersonal).contains("@")) {
                final Directorio directorio = new Directorio();
                directorio.setNiup(formatter.formatCellValue(cellNiup).replaceAll("\\.", ""));
                directorio.setCorreoPersonal(formatter.formatCellValue(cellCorreoPersonal));
                directorio.setCorreoAlternativo(formatter.formatCellValue(cellCorreoAlternativo));
                directorioList.add(directorio);
            }

        }

        this.actualizarTabla();
        
        JOptionPane.showMessageDialog(this, "Se ha cargado el directorio correctamente: [" + directorioList.size() + "]", "Directorio correo", 1);

    }

    private void actualizarTabla() {

        final DefaultTableModel tableModel = new DefaultTableModel();
        this.tableDirectorio = new JTable(tableModel);
        this.tableDirectorio.setEnabled(false);

        tableModel.addColumn("Niup");
        tableModel.addColumn("Correo personal");
        tableModel.addColumn("Correo alternativo");

        this.directorioList.forEach(directorio -> {

            tableModel.insertRow(tableModel.getRowCount(), new Object[]{
                directorio.getNiup(),
                directorio.getCorreoPersonal(),
                directorio.getCorreoAlternativo()
            });

        });

        jScrollPane1.setViewportView(tableDirectorio);
    }

    public List<Directorio> getDirectorioList() {
        return directorioList;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarArchivo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableDirectorio;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
